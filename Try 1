//-------------------------------------------------
//! Solves a square equation ax2 + bx + c = 0
//!
//! @param [in] a a-coefficient
//! @param [in] b b-coefficient
//! @param [in] c c-coefficient
//! @param [out] x1 first root
//! @param [out] x2 second root
//!
//! @return number of roots
//!
//! @note   INF_ROOTS - infinity numbers of roots
//!
//-------------------------------------------------

#include <stdio.h>
#include <math.h>
#include <assert.h>
#include <string.h>

#define INF_ROOTS -1
#define NO_ROOTS  0
#define ONE_ROOT  1
#define TWO_ROOTS 2
#define EPS 0.00001

int SquareSolver(double a, double b, double c, double* x1, double* x2)
{
    assert(x1 != NULL);
    assert(x2 != NULL);
    assert(x1 != x2);

    if (Compare_with_null(a))
    {
        if (Compare_with_null(b) == 1)
        {
            return (Compare_with_null(c) == 1) ? INF_ROOTS : NO_ROOTS;
        }
        else
        {
            *x1 = -c / b;
            return ONE_ROOT;
        }
    }
    else
    {
        if ((pow(b, 2) - 4 * a * c) > 0)
        {
            *x1 = (-b + sqrt(pow(b, 2) - 4 * a * c)) / (2 * a);
            *x2 = (-b - sqrt(pow(b, 2) - 4 * a * c)) / (2 * a);
            return TWO_ROOTS;
        }
        else if ((pow(b, 2) - 4 * a * c) < 0)
            return NO_ROOTS;
        else
        {
            *x1 = (-b + sqrt(pow(b, 2) - 4 * a * c)) / (2 * a);
            return ONE_ROOT;
        }
    }

}

int Compare_with_null(double n)
{
    if (fabs(n) < EPS)
        return 1;
    else
        return 0;
}

int Clear_board()
{
        int symbol = 0;

        while ((symbol = getchar()) != '\n')
        {
            ;
        }
}
int main()
{
    double a = 0, b = 0, c = 0, x1 = 0, x2 = 0;

    printf("# SquareSolver\n" "# (c), Ann, 2024\n");
    printf("# Enter a, b, c: ");

    while (scanf("%lg %lg %lg", &a, &b, &c) != 3)
    {
        Clear_board();

        printf("Enter again please\n");
    }
    double coefs[3];

    coefs[0] = a;
    coefs[1] = b;
    coefs[2] = c;

    int NumRoots = SquareSolver(coefs[0], coefs[1], coefs[2], &x1, &x2);
    double roots[2];

    switch (NumRoots)
    {
        case NO_ROOTS:

            printf("No solutions\n");

            break;


        case ONE_ROOT:

            printf("x = %lg\n", x1);

            roots[0] = x1;

            break;


        case TWO_ROOTS:

            printf("x1 = %lg, x2 = %lg\n", x1, x2);

            roots[0] = x1;
            roots[1] = x2;

            break;

        case INF_ROOTS:

            printf("Any number\n");
            break;

    }
}
